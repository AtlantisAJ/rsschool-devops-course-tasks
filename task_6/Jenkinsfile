pipeline {
    agent any

    environment {
        IMAGE_NAME = "task-6"
        KUBE_CONFIG = credentials('kubeconfig')
    }

    stages {
        stage('Prepare Environment') {
            steps {
                script {
                    sh '''
                        which docker || { echo "Docker not found"; exit 1; }
                        which kubectl || { echo "kubectl not found"; exit 1; }
                        which minikube || { echo "minikube not found"; exit 1; }
                    '''
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    docker.build("${IMAGE_NAME}:latest")
                }
            }
        }

        stage('Deploy with Helm') {
            steps {
                sh """
                export KUBECONFIG=${KUBE_CONFIG}
                helm upgrade --install ${IMAGE_NAME} ./helm-chart \
                    --set image.repository=${IMAGE_NAME} \
                    --set image.tag=latest \
                    --set image.pullPolicy=Never \
                    --atomic --wait
                """
            }
        }

        stage('Verify') {
            steps {
                script {
                    sh """
                    export KUBECONFIG=${KUBE_CONFIG}
                    kubectl wait --for=condition=ready pod -l app=${IMAGE_NAME} --timeout=120s
                    URL=$(minikube service ${IMAGE_NAME}-service --url)
                    curl -s \$URL | grep "Task 6 Application Deployment" || exit 1
                    """
                }
            }
        }
    }
}
